import streamlit as st
import csv
import pandas as pd

# Page principale
st.title("Bienvenue sur l‚Äôassistant retraite")
st.write("Voici votre outil pour simuler et g√©rer votre retraite.")


# === CONTENU PRINCIPAL ===
st.title("Bienvenue sur l'assistant retraite")
st.write("Voici votre espace pour simuler, suivre et optimiser votre retraite.")

# Configuration de la page
st.set_page_config (page_title="Accompagnement Retraite", page_icon="üßì",layout="centered")

# Barre lat√©rale pour la navigation
st.sidebar.title("Navigation")
page = st.sidebar.radio("Aller vers :", ["üè† Accueil", "üìÑ Formulaire retraite", "üìä Voir les demandes"])

# PAGE D'ACCUEIL
if page == "üè† Accueil":
    st.title("üßì Accompagnement Retraite ‚Äì Permanence Sociale")
    st.markdown("""
    Bienvenue sur notre plateforme d'accompagnement retraite d√©di√©e aux usagers.

    Nous vous aidons √† :
    - Comprendre vos droits √† la retraite
    - Compl√©ter vos dossiers CARSAT
    - Prendre rendez-vous avec un m√©diateur social

    > Ce service est **gratuit et confidentiel**.  
    Pour commencer, rendez-vous sur l'onglet **Formulaire retraite** dans le menu de gauche.
    """)

# PAGE FORMULAIRE
elif page == "üìÑ Formulaire retraite":
    st.title("üìÑ Formulaire de demande d'accompagnement")
    
    with st.form(key='retraite_form'):
        # Champs du formulaire
        nom = st.text_input("Nom")
        prenom = st.text_input("Pr√©nom")
        date_naissance = st.date_input("Date de naissance")
        num_secu = st.text_input("Num√©ro de s√©curit√© sociale")
        adresse = st.text_area("Adresse")
        
        # Bouton de soumission
        submit_button = st.form_submit_button(label="Soumettre")
        
        if submit_button:
            # Sauvegarder les donn√©es dans un fichier CSV
            with open("retraite_demandes.csv", mode="a", newline="") as f:
                writer = csv.writer(f)
                writer.writerow([nom, prenom, date_naissance, num_secu, adresse])
                
            st.success("Demande envoy√©e ! Nous vous contacterons sous peu.")

# PAGE POUR VOIR LES DEMANDES ENREGISTR√âES
elif page == "üìä Voir les demandes":
    st.title("üìä Liste des demandes re√ßues")
    
    # Lire le fichier CSV pour afficher les demandes
    try:
        df = pd.read_csv("retraite_demandes.csv")
        st.dataframe(df)
    except FileNotFoundError:
        st.warning("Aucune demande enregistr√©e pour le moment.")
import streamlit as st
import pandas as pd
import datetime

# Fonction pour v√©rifier si le rendez-vous est disponible
def est_disponible(date_rdv, heure_rdv):
    try:
        df = pd.read_csv("rendezvous.csv")
    except FileNotFoundError:
        return True  # Si aucun rendez-vous n'est enregistr√©, tout est disponible
    
    # V√©rifier si un rendez-vous existe d√©j√† pour la m√™me date et heure
    if any((df['Date'] == str(date_rdv)) & (df['Heure'] == str(heure_rdv))):
        return False
    return True

# Fonction pour enregistrer un rendez-vous dans le CSV
def enregistrer_rdv(nom, prenom, date_rdv, heure_rdv):
    # Ouvrir (ou cr√©er si n√©cessaire) un fichier CSV pour stocker les rendez-vous
    try:
        df = pd.read_csv("rendezvous.csv")
    except FileNotFoundError:
        df = pd.DataFrame(columns=["Nom", "Pr√©nom", "Date", "Heure"])
    
    # Ajouter le nouveau rendez-vous
    df = df.append({"Nom": nom, "Pr√©nom": prenom, "Date": date_rdv, "Heure": heure_rdv}, ignore_index=True)
    df.to_csv("rendezvous.csv", index=False)

# Page pour prendre un rendez-vous
if page == "üìÖ Prendre un rendez-vous":
    st.title("üìÖ Prendre un rendez-vous")
    
    # Champs de formulaire pour le rendez-vous
    nom = st.text_input("Nom")
    prenom = st.text_input("Pr√©nom")
    
    # S√©lectionner la date et l'heure du rendez-vous
    date_rdv = st.date_input("Choisissez une date pour votre rendez-vous", min_value=datetime.date.today())
    heure_rdv = st.time_input("Choisissez une heure pour votre rendez-vous", value=datetime.time(9, 0))
    
    # V√©rifier la disponibilit√©
    if not est_disponible(date_rdv, heure_rdv):
        st.error("D√©sol√©, cette date et heure sont d√©j√† r√©serv√©es. Veuillez choisir une autre horaire.")
    else:
        # Bouton de soumission
        submit_button = st.button("Confirmer le rendez-vous")
        
        if submit_button:
            # Enregistrer le rendez-vous
            enregistrer_rdv(nom, prenom, date_rdv, heure_rdv)
            st.success(f"Rendez-vous confirm√© pour le {date_rdv} √† {heure_rdv}.")
st.title("Assistant Retraite üßì")
st.header("Bienvenue sur le simulateur de retraite !")
st.subheader("Estimez votre pension avec simplicit√©")

import streamlit as st

# Charger le CSS personnalis√©
def load_css(file):
    with open(file) as f:
        st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

load_css("styles.css")  # Appliquer le CSS
def load_css(file):
    with open(file) as f:
        st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

load_css("styles.css")
st.markdown(
    """
    <div class="banniere-custom">
        <div class="logo-part">
            <img src="assets/logo.png" width="60">
        </div>
        <div class="text-part">
            <h1>Assistant Retraite üßì</h1>
            <p>Simulez votre pension simplement</p>
        </div>
    </div>
    """,
    unsafe_allow_html=True
)
import streamlit as st

menu = ["Accueil", "Tableau de bord", "m√©mos"]
choix = st.sidebar.selectbox("Navigation", menu)
dashboard_section()
if choix == "Tableau de bord":
    dashboard_section()
else:
    st.write("Bienvenue dans votre application !")

def dashboard_section():
    st.title("Tableau de Bord - Retraite")
    st.subheader("Informations essentielles pour d√©marrer votre dossier retraite")

    # Ajouter des sections interactives avec des boutons
    menu = ["Conditions G√©n√©rales", "Documents √† pr√©parer", "√âtapes √† suivre", "Conseils pratiques", "√âch√©ances importantes"]
    choice = st.radio("Choisissez une rubrique", menu)

    if choice == "Conditions G√©n√©rales":
        show_conditions()

    elif choice == "Documents √† pr√©parer":
        show_documents()

    elif choice == "√âtapes √† suivre":
        show_steps()

    elif choice == "Conseils pratiques":
        show_tips()

    elif choice == "√âch√©ances importantes":
        show_deadlines()

# Sections de contenu
def show_conditions():
    st.header("Conditions G√©n√©rales")
    st.write("""
        Pour pouvoir faire une demande de retraite, voici les crit√®res essentiels :
        - **√Çge minimum** : 62 ans pour la retraite de base.
        - **Dur√©e de cotisation** : minimum 166 trimestres.
    """)

def show_documents():
    st.header("Documents √† pr√©parer")
    st.write("""
        Avant de commencer votre demande de retraite, voici les documents √† rassembler :
        - **Carte d'identit√© ou passeport**
        - **Justificatifs de vos p√©riodes travaill√©es**
    """)

def show_steps():
    st.header("√âtapes √† suivre")
    st.write("""
        Voici les grandes √©tapes pour demander votre retraite :
        1. **Pr√©parer vos documents**
        2. **Calculer votre retraite**
        3. **Faire votre demande**
        4. **Envoyer les pi√®ces justificatives**
    """)

def show_tips():
    st.header("Conseils pratiques")
    st.write("""
        Quelques conseils pour √©viter les erreurs fr√©quentes :
        - **V√©rifiez vos trimestres cotis√©s**
        - **Anticipez votre demande**
    """)

def show_deadlines():
    st.header("√âch√©ances importantes")
    st.write("""
        Assurez-vous de respecter ces dates importantes :
        - **5 mois avant la retraite** : D√©posez votre demande.
    """)













